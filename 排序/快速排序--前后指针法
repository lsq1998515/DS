//快排3前后指针法  prev:最后一个小于key的位置   cur:下一个小于key的位置
int PartSort3(int* a, int left, int right)
{
	int mid = getMid(a, left, right);
	Swap(&a[mid], &a[left]);
 
	int prev = left;
	int cur = left + 1;
	int key = a[left];
	while (cur <= right)
	{
		if (a[cur] <key && (++prev)!=cur)
		{
			Swap(&a[prev], &a[cur]);
		}
		cur++;
	}
	Swap(&a[prev], &a[left]);
	return prev;
}
 
void QuickSort3(int* a, int left, int right)
{
	if (left >= right)
	{
		return;
	}
	int mid = PartSort3(a, left, right);
	QuickSort3(a, left, mid-1);
	QuickSort3(a, mid + 1, right);
}
int main()
{
	int a[] = { 2, 5, 1, 3, 6, 8, 9, 122, 4, 7 };
	PrintArray(a, 10);
	QuickSort3(a, 0, 9);
	PrintArray(a, 10);
	return 0;
}
